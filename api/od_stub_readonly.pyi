from typing import Any
from uuid import UUID

def get(name: str) -> UUID: ...
def get_value(obj: UUID) -> Any: ...
def get_target(link: UUID) -> UUID: ...
def get_source(link: UUID) -> UUID: ...
def get_slot(obj: UUID, attr_name: str) -> UUID: ...
def get_slots(obj: UUID) -> list[str]: ...
def get_slot_value(obj: UUID, attr_name: str) -> Any: ...
def get_slot_value_default(obj: UUID, attr_name: str, default: any) -> Any: ...
def get_all_instances(type_name: str, include_subtypes=True) -> list[UUID]: ...
def get_name(obj: UUID) -> str: ...
def get_type_name(obj: UUID) -> str: ...
def get_outgoing(obj: UUID, assoc_name: str, include_subtypes=True) -> list[UUID]: ...
def get_incoming(obj: UUID, assoc_name: str, include_subtypes: object = True) -> list[UUID]: ...
def has_slot(obj: UUID, attr_name: str) -> bool: ...
def is_instance(obj: UUID, type_name: str, include_subtypes=True) -> bool: ...
